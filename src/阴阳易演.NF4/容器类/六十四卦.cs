namespace 阴阳易演.容器类
{
    using System.Collections.Generic;
    using 抽象类;
    using 计算类;

    public class 六十四卦
    {
        #region 构造
        public 六十四卦(八卦 上卦, 八卦 下卦)
        {
            客卦 = 上卦;
            主卦 = 下卦;
            卦名 = 查询卦名(上卦, 下卦);
            卦象名 = 上卦.卦象 == 下卦.卦象 ? $"{卦名}为{上卦.卦象}" : $"{上卦.卦象}{下卦.卦象}{卦名}";
            爻值 = 生成爻值(上卦, 下卦);
        }

        #endregion

        #region 属性
        public 八卦 客卦 { get; }
        public 八卦 主卦 { get; }
        public string 卦名 { get; }
        public string 卦象名 { get; }
        public byte 爻值 { get; protected set; }

        #endregion

        #region 方法
        public static string 查询卦名(八卦 上卦, 八卦 下卦)
        {
            var 上序 = 卦序列表.IndexOf(上卦);
            var 下序 = 卦序列表.IndexOf(下卦);
            var 卦序 = 卦序字典[上序][下序];
            return 卦名字典[卦序];
        }
        public static byte 生成爻值(八卦 上卦, 八卦 下卦)
        {
            var 上爻序 = 八卦计算.还原爻序(上卦.爻值, 3);
            var 下爻序 = 八卦计算.还原爻序(下卦.爻值, 3);
            return 八卦计算.生成爻值(下爻序 + 上爻序);
        }
        public static string 还原爻序(byte 爻值)
        {
            return 八卦计算.还原爻序(爻值, 6);
        }

        #endregion

        #region 内部参数
        static readonly List<八卦> 卦序列表 = new List<八卦> { 八卦.乾, 八卦.坤, 八卦.震, 八卦.艮, 八卦.离, 八卦.坎, 八卦.兑, 八卦.巽 };
        static readonly int[][] 卦序字典 = {
            new []{1    ,12  ,25  ,33  ,13  ,6   ,10  ,44},
            new []{11   ,2   ,24  ,15  ,36  ,7   ,19  ,46},
            new []{34   ,16  ,51  ,62  ,55  ,40  ,54  ,32},
            new []{26   ,23  ,27  ,52  ,22  ,4   ,41  ,18},
            new []{14   ,35  ,21  ,56  ,30  ,64  ,38  ,50},
            new []{5    ,8   ,3   ,39  ,63  ,29  ,60  ,48},
            new []{43   ,45  ,17  ,31  ,49  ,47  ,58  ,28},
            new []{9    ,20  ,42  ,53  ,37  ,59  ,61  ,57},
        };
        static readonly Dictionary<int, string> 卦名字典 = new Dictionary<int, string>
        {
            { 1,  "乾" },    { 2,  "坤" },    { 3,  "屯" },   { 4,  "蒙" },   { 5,  "需" },   { 6,  "讼" },   { 7,  "师" },   { 8,  "比" },
            { 9,  "小畜" },  { 10, "履" },    { 11, "泰" },   { 12, "否" },   { 13, "同人" }, { 14, "大有" }, { 15, "谦" },   { 16, "豫" },
            { 17, "随" },    { 18, "蛊" },    { 19, "临" },   { 20, "观" },   { 21, "噬嗑" }, { 22, "贲" },   { 23, "剥" },   { 24, "复" },
            { 25, "无妄" },  { 26, "大畜" },  { 27, "颐" },   { 28, "大过" }, { 29, "坎" },   { 30, "离" },   { 31, "咸" },   { 32, "恒" },
            { 33, "遁" },    { 34, "大壮" },  { 35, "晋" },   { 36, "明夷" }, { 37, "家人" }, { 38, "睽" },   { 39, "蹇" },   { 40, "解" },
            { 41, "损" },    { 42, "益" },    { 43, "夬" },   { 44, "姤" },   { 45, "萃" },   { 46, "升" },   { 47, "困" },   { 48, "井" },
            { 49, "革" },    { 50, "鼎" },    { 51, "震" },   { 52, "艮" },   { 53, "渐" },   { 54, "归妹" }, { 55, "丰" },   { 56, "旅" },
            { 57, "巽" },    { 58, "兑" },    { 59, "涣" },   { 60, "节" },   { 61, "中孚" }, { 62, "小过" }, { 63, "既济" }, { 64, "未济" }
        };

        #endregion

        #region 重写
        public override string ToString() => 卦名;

        #endregion

    }
}